{"componentChunkName":"component---src-templates-blog-post-index-js","path":"/2020_03_28_sorting_012/","result":{"data":{"site":{"siteMetadata":{"title":"My training box","author":"kklyoon"}},"markdownRemark":{"id":"52f3825c-ff04-564d-a8b0-1d5ad66947bc","html":"<p>원본 : <a href=\"https://www.geeksforgeeks.org/sort-an-array-of-0s-1s-and-2s/\">https://www.geeksforgeeks.org/sort-an-array-of-0s-1s-and-2s/</a></p>\n<h2>Sort an array of 0s, 1s and 2s</h2>\n<p>0,1,2 으로 이루어진 배열을 정렬하라</p>\n<p>가장 심플한 방법은 <a href=\"https://www.geeksforgeeks.org/sort-array-0s-1s-2s-simple-counting/\">0,1,2 를 세는방법</a>이지만 배열을 한번 더 써야하는 단점이 있음</p>\n<p>배열을 네가지의 영역으로 나눈다. </p>\n<ol>\n<li>a[0..Lo-1] zeroes </li>\n<li>a[Lo..Mid-1] ones </li>\n<li>a[Mid..Hi] unknown</li>\n<li>a[Hi+1..N-1] twos </li>\n</ol>\n<p>Lo 와 Mid 에 해당되는 인덱스를 0으로 놓고 시작하면서\nLo 에 있는 값은 0\nHi 에 있는 값은 2\nMid 에 있는 값은 1 이라고 생각하면서 인덱스를 더하거나 줄여가면서 값을 바꿔준다.\n예를들어 a[Mid] 에 있는 값이 0이면 a[Lo] 와 swap 하고 Lo++<br>\na[Mid] 에 있는 값이 1이면 Mid++\na[Mid] 에 있는 값이 2이면 a[Hi] 와 swap  하고 Hi--\nMid 와 Hi 가 같아질 때까지 반복한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"c++\">\n      <pre class=\"language-c++\"><code class=\"language-c++\">// C++ program to sort an array \n// with 0,1 and 2 in a single pass \n#include&lt;bits/stdc++.h&gt; \nusing namespace std; \n\n\n\n// Function to sort the input array, \n// the array is assumed \n// to have values in {0, 1, 2} \nvoid sort012(int a[], int arr_size) \n{ \n\tint lo = 0; \n\tint hi = arr_size - 1; \n\tint mid = 0; \n\t\n\t// Iterate till all the elements \n\t// are sorted \n\twhile (mid &lt;= hi) \n\t{ \n\t\tswitch (a[mid]) \n\t\t{ \n\t\t\t\n\t\t\t// If the element is 0 \n\t\tcase 0: \n\t\t\tswap(a[lo++], a[mid++]); \n\t\t\tbreak; \n\t\t\t\n\t\t\t// If the element is 1 . \n\t\tcase 1: \n\t\t\tmid++; \n\t\t\tbreak; \n\t\t\t\n\t\t\t// If the element is 2 \n\t\tcase 2: \n\t\t\tswap(a[mid], a[hi--]); \n\t\t\tbreak; \n\t\t} \n\t} \n} \n\n\n\n// Function to print array arr[] \nvoid printArray(int arr[], int arr_size) \n{ \n\t// Iterate and print every element \n\tfor (int i = 0; i &lt; arr_size; i++) \n\t\tcout &lt;&lt; arr[i] &lt;&lt; &quot; &quot;; \n\n} \n\n// Driver Code \nint main() \n{ \n\tint arr[] = {0, 1, 1, 0, 1, 2, 1, 2, 0, 0, 0, 1}; \n\tint n = sizeof(arr)/sizeof(arr[0]); \n\t\n\tsort012(arr, n); \n\n\tcout &lt;&lt; &quot;array after segregation &quot;; \n\t\n\tprintArray(arr, n); \n\n\treturn 0; \n} \n\n// This code is contributed by Shivi_Aggarwal </code></pre>\n      </div>\n<p>코틀린 코드도 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\">\n      <pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token keyword\">import</span> java<span class=\"token punctuation\">.</span>util<span class=\"token punctuation\">.</span>Collections<span class=\"token punctuation\">.</span>swap\n\n<span class=\"token keyword\">fun</span> <span class=\"token function\">sort012</span><span class=\"token punctuation\">(</span>arr<span class=\"token operator\">:</span> MutableList<span class=\"token operator\">&lt;</span>Int<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">val</span> size <span class=\"token operator\">=</span> arr<span class=\"token punctuation\">.</span>size\n    <span class=\"token keyword\">var</span> lo<span class=\"token operator\">=</span><span class=\"token number\">0</span>\n    <span class=\"token keyword\">var</span> hi<span class=\"token operator\">=</span> size <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n    <span class=\"token keyword\">var</span> mid <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>mid<span class=\"token operator\">&lt;=</span>hi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">when</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">[</span>mid<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token number\">0</span> <span class=\"token operator\">-></span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> lo<span class=\"token operator\">++</span><span class=\"token punctuation\">,</span> mid<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\n            <span class=\"token number\">1</span> <span class=\"token operator\">-></span> mid<span class=\"token operator\">++</span>\n            <span class=\"token number\">2</span> <span class=\"token operator\">-></span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">,</span> mid<span class=\"token punctuation\">,</span> hi<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n      </div>","excerpt":"원본 : https://www.geeksforgeeks.org/sort-an-array-of-0s-1s-and-2s/ Sort an array of 0s, 1s and 2s 0,1,2 으로 이루어진 배열을 정렬하라 가장 심플한 방법은 0,1,…","frontmatter":{"title":"[Algorithm] 0, 1, 2로 이루어진 배열 정렬하기","date":"2020-03-28","tags":["algorithm","sort","알고리즘","C++","kotlin"],"keywords":["My training box"]}}},"pageContext":{"slug":"/2020_03_28_sorting_012/","previous":{"fields":{"slug":"/2020_03_27_cutting_rod/"},"frontmatter":{"title":"[Algorithm] 막대 자르기","tags":["programming","algorithm","알고리즘","막대자르기"],"published":true}},"next":{"fields":{"slug":"/2020_04_03_scope_function/"},"frontmatter":{"title":"[Kotlin][번역 및 요약] Scope Function","tags":["Kotlin","코틀린","ScopeFunction","번역","run","with","let","apply","also"],"published":true}}}},"staticQueryHashes":["3649515864"]}